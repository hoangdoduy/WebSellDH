<EditForm Model="@AccountEdit" FormName="editacc" OnSubmit="@EditAccountAsync">
    <DataAnnotationsValidator />
    <div class="modal-body">
        <div class="form-group">
            <div class="form-line">
                <InputText type="text" class="form-control" placeholder="UserName" @bind-Value="AccountEdit!.UserName" />
            </div>
        </div>

        <div class="form-group">
            <div class="form-line">
                <InputText type="password" class="form-control" placeholder="Password" @bind-Value="AccountEdit.Password" />
            </div>
        </div>

        <div class="form-group">
            <div class="form-line">
                <InputText type="email" class="form-control" placeholder="Email" @bind-Value="AccountEdit.Email" />
            </div>
        </div>

        <div class="form-group">
            <div class="form-line">
                <InputText type="text" class="form-control" placeholder="Phone" @bind-Value="AccountEdit.Phone" />
            </div>
        </div>

    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-primary waves-effect">SAVE CHANGES</button>
        <button type="button" class="btn btn-danger waves-effect" data-dismiss="modal">CLOSE</button>
    </div>
</EditForm>

@code {
    [Parameter]
    [SupplyParameterFromForm(FormName = "editacc")]
    public UserAccount? AccountEdit { get; set; }

    private async Task EditAccountAsync()
    {
        await Task.Yield();
        string name = AccountEdit.UserName;
    }
}
